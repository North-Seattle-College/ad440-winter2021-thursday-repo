name: Serverless-Artillery test and upload json to S3 users-userid-tasks-taskid-api

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the development branch
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "serverless-artillery-test-upload"
  serverless-artillery-test-upload:
    name: serverless artillery test and upload json object to aws s3
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      STAGE_NAME: users-uid-tasks-tid

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Setup Node.js environment
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          check-latest: true

      # Configuration of AWS secrets
      - name: Configuration of AWS secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Installing serverless-artillery
        run: |
          npm install -g serverless@1.38.0
          npm install -g serverless-artillery
          echo "version of slsart"
          slsart --version

      # serverless-artillery Deploy, invoke and remove
      - name: deploy
        run: slsart deploy --stage $STAGE_NAME --region us-west-2
      - name: invoke
        run: slsart invoke -o test/serverless-artillery/serverless-artillery-test-users-uid-tasks-tid-api.yml --region us-west-2 --stage $STAGE_NAME --jsonOnly > test/results/slsart-users-uid-tasks-tid-results.json
      - name: remove
        run: slsart remove --stage $STAGE_NAME --region us-west-2

      # Get current time
      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: -8
          format: 'YYYY/MM/DD/HH-mm-ss'
        run: echo "::set-output name=date::$(date +'YYYY/MM/DD/HH-mm-ss')"

      - name: Usage
        env:
          TIME: "${{ steps.time.outputs.time }}"
        run: |
          echo $TIME
       
      # add timstamp to file name
      - name: ADD time stamp to file name
        run: |
          cp test/results/slsart-users-uid-tasks-tid-results.json test/results/serverless-artillery_${{ steps.time.output.time }}.json

      # Upload the results to S3 bucket
      - name: AWS upload S3
        run: |
          aws s3 cp test/results/ s3://${{ secrets.SLSART_BUCKET }} --recursive --exclude "*" --include "serverless-artillery*"