name: SQL injection test for DELETE users/userid
on:
  push:
    branches:
      - development
env:
  NODE_VERSION: '10.x'

jobs:
  DELETE-user-test-case:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      # Create test user to delete and write user json to result file
      - name: 'Create test user to delete'
        run: |
          curl -v POST -d '{ "firstName": "inject-del-fname", "lastName": "inject-del-lname", "email": "inject-del-email" }' https://nsc-fun-dev-usw2-thursday.azurewebsites.net/api/users > test/security/sql-injection/delete-users-userid.json
      
      # Retrieve userId from result file
      - name: 'Retrieve userId-to delete'
        id: userDeleteId
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: test/security/sql-injection/delete-users-userid.json
          prop_path: 'userId'
      
      # Create test user to update and write user json to result file
      - name: 'Create userId-to update'
        run: |
          curl -v POST -d '{ "firstName": "inject-update-fname", "lastName": "inject-update-lname", "email": "inject-update-email" }' https://nsc-fun-dev-usw2-thursday.azurewebsites.net/api/users > test/security/sql-injection/delete-users-userid.json
      
      # Retrieve userId from result file
      - name: 'Retrieve userId-to update'
        id: userUpdateId
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: test/security/sql-injection/delete-users-userid.json
          prop_path: 'userId'  
      
      # Attempt update injection on email and update results file
      - name: "Delete user with userId ${{ steps.userDeleteId.outputs.prop }}"
        run: |
          curl -v -X DELETE -d '{ "userId": "'${{ steps.userDeleteId.outputs.prop }}'); or 1=1; UPDATE users SET email='attacked email' WHERE userId = ${{ steps.userUpdateId.outputs.prop }}; --" }' https://nsc-fun-dev-usw2-thursday.azurewebsites.net/api/users/${{ steps.userDeleteId.outputs.prop }} > test/security/sql-injection/delete-users-userid.json
      
      # GET userUpdateId email into results file
      - name: 'Get userUpdateteId email'
        run: |
          curl -v GET https://nsc-fun-dev-usw2-thursday.azurewebsites.net/api/users/${{ steps.userUpdateId.outputs.prop }} > test/security/sql-injection/delete-users-userid.json
      
      # Retrieve email from results file
      - name: 'Retrieve current email from GET request'
        id: getEmail
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: test/security/sql-injection/delete-users-userid.json
          prop_path: 'email'
      
      # Check for userUpdateId email changes in results file
      - name: "Compare current email to original"
        if: ${{ steps.getEmail.outputs.prop }} == {{ 'inject-update-email' }}
        run: echo "Injection unsuccessful; email remains unaltered:"" ${{ steps.getEmail.outputs.prop }} = ${{ 'inject-update-email' }}" 
      
      # Remove test results file
      - name: 'Remove Test Results File'
        uses: JesseTG/rm@v1.0.2
        with:
          path: test/security/sql-injection/delete-users-userid.json